@model ResumeStripper.Models.Viewmodels.MessageViewModel

@{
    /**/

    ViewBag.Title = "Resume Stripper";
}

@Styles.Render("~/Content/css")
@Styles.Render("https://cdn.jsdelivr.net/npm/pdfjs-dist@2.0.943/web/pdf_viewer.css")
@Scripts.Render("https://code.jquery.com/jquery-3.3.1.min.js")
@Scripts.Render("~/bundles/bootstrap")

@Scripts.Render("https://cdn.jsdelivr.net/npm/pdfjs-dist@2.0.943/build/pdf.min.js")
@Scripts.Render("https://cdn.jsdelivr.net/npm/pdfjs-dist@2.0.943/build/pdf.worker.min.js")
@Scripts.Render("~/Scripts/textlayer/text_layer_builder.js")
@Styles.Render("~/Scripts/textlayer/text_layer_builder.css")
@Scripts.Render("~/Scripts/PDFSCRIPT.js")

@Scripts.Render("~/Scripts/js/ChooseScript.js")
@Scripts.Render("~/Scripts/js/ChangeElementScript.js")

<div class="wrapper">
    <div class="sidebar" data-color="orange" data-image="~/Content/img/sidebar.jpg">
        <div class="sidebar-wrapper">
            <div class="logo">
                <img class="sidebar-logo" src="~/Content/img/logo-glow.png" alt="EHV Talent" width="100%" />
            </div>
            <ul class="nav">
                <li class="active">
                    <a href="dashboard.html">
                        <i class="pe-7s-graph"></i>
                        <p>Dashboard</p>
                    </a>
                </li>
                <li class="active-pro">
                    <a href="#">
                        <i class="pe-7s-door-lock"></i>
                        <p>Log out</p>
                    </a>
                </li>
            </ul>
        </div>
    </div>

    <div class="main-panel">
        <nav class="navbar navbar-default navbar-fixed">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse"
                            data-target="#navigation-example-2">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#">Dashboard</a>
                </div>
                <div class="collapse navbar-collapse">
                    <ul class="nav navbar-nav navbar-right">
                        <li>
                            <a href="">
                                <p>My account</p>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                <p>Log out</p>
                            </a>
                        </li>
                        <li class="separator hidden-lg"></li>
                    </ul>
                </div>
            </div>
        </nav>

        <div class="content all-icons">

            <div class="container-fluid">
                <div class="row">

                    <!-- Kaart links -->
                    <div class="col-md-6">
                        <div class="card" height="1000px">
                            <div class="header">
                                <h4 style="display: inline-block;" class="title">Resume applicant</h4>
                                @using (Html.BeginForm("Upload", "CV", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="file" name="pdf" id="pdf-upload" onchange="this.form.submit()" />
                                    @ViewBag.FileStatus
                                }
                                @*<button id="chooseBtn" onclick="" data-text-swap="Switch to PDF View!">Switch to Text View!</button>
                                    <p id="result">test</p>*@
                                <hr>

                                <br />
                                @{
                                    if (Model != null)
                                    {
                                        <div id="pdfChoice" style="padding-bottom: 50px;">
                                            @if (ViewBag.JavaScriptFunction != null)
                                            {
                                                <script type="text/javascript">
                                                @Html.Raw(ViewBag.JavaScriptFunction)
                                                </script>
                                            }
                                            <div id="container"></div>
                                        </div>
                                        @*<div id="textChoice" style="display:none">
                                                @Html.Raw(Model.Text)
                                            </div>*@
                                    }
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Kaart rechts -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="header">
                                <h4 style="display: inline-block;" class="title">Resume EHV</h4><img align="right"
                                                                                                     src="~/Content/img/icon-download.png" />
                                <img src="~/Content/img/ehv-talent-logo.png" alt="EHV Talent" align="right">

                                <style>
                                    .divsenn {
                                        margin-top: 150px;
                                    }

                                    h4 {
                                        font-weight: bold;
                                    }
                                </style>

                            </div>
                            @using (Html.BeginForm("Export", "CV", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <input type="submit" value="Generate CV" name="submitter" />
                                <input type="submit" value="Generate Anonymous CV" name="submitter" />
                                <br />
                                <br />
                                <br />
                                <h3>Personal Information</h3>
                                <br />
                                @Html.TextBoxFor(m => m.ResultCv.Name, new { @class = "form-control", onfocus = "changeText(this.id)", placeholder = "First Name", required = "required" })
                                <br />
                                @Html.TextBoxFor(m => m.ResultCv.Prefix, new { @class = "form-control", onfocus = "changeText(this.id)", placeholder = "Prefix" })
                                <br />
                                @Html.TextBoxFor(m => m.ResultCv.Surname, new { @class = "form-control", onfocus = "changeText(this.id)", placeholder = "Last Name", required = "required" })
                                <br />
                                @Html.TextBoxFor(m => m.ResultCv.Residence, new { @class = "form-control", onfocus = "changeText(this.id)", placeholder = "Residence", required = "required" })
                                <br />
                                @Html.TextBoxFor(m => m.ResultCv.Country, new { @class = "form-control", onfocus = "changeText(this.id)", placeholder = "Country", required = "required" })
                                <br />
                                @Html.LabelFor(m => m.ResultCv.DateOfBirth)
                                @Html.TextBoxFor(m => m.ResultCv.DateOfBirth, new { @class = "form-control", onfocus = "changeText(this.id)", @Value = "", type = "Date" })
                                <br />
                                <div id="LicenseFields">
                                </div>
                                <br />
                                <input type="button" id="addLicenseBtn" onclick="addLicense()" value="Add License" />
                                <br />
                                <br />
                                @Html.TextAreaFor(m => m.ResultCv.Profile, new { @class = "form-control", onfocus = "changeText(this.id)", placeholder = "Profile", maxlength = "20000" })
                                <br />
                                <h3>Educations</h3>
                                <hr />
                                <script type="text/javascript">
                                    function addLicense() {
                                        @{
                                            Model.ResultCv.Licenses.Add(new ResumeStripper.Models.License());
                                        }
                                        var i = document.getElementById("LicenseFields").getElementsByClassName("licenseRow").length;
                                        var fields = $('#LicenseFields');
                                        var template = '<div class="licenseRow"><input name="ResultCv.Licenses.Index" type="hidden" value="' + i + '"/><select required class="form-control" data-val="true" data-val-required="Het veld Type is vereist." id="ResultCv_Licenses_' + i + '__Type" name="ResultCv.Licenses[' + i + '].Type"><option value="">Select Type</option><option selected="selected" value="0">None</option><option value="1">A</option><option value="2">A1</option><option value="3">A2</option><option value="4">AM</option><option value="5">B</option><option value="6">BE</option><option value="7">B+</option><option value="8">C</option><option value="9">CE</option><option value="10">C1</option><option value="11">C1E</option><option value="12">D</option><option value="13">DE</option><option value="14">D1</option><option value="15">D1E</option><option value="16">T</option></select><input type="button" value="Remove License" onclick="removeElement(ResultCv_Licenses_' + i + '__Type.id, this)"/></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function removeElement(id, ele) {
                                        var element = document.getElementById(id);
                                        ele.parentNode.removeChild(ele);
                                        element.parentNode.removeChild(element);
                                        return false;
                                    }
                                    function addEducation() {
                                        @{
                                            Model.ResultCv.Educations.Add(new ResumeStripper.Models.Experiences.EducationExperience());
                                        }
                                        var i = document.getElementById("EducationFields").getElementsByClassName("eduRow").length;
                                        var fields = $('#EducationFields');
                                        var template = '<div class="eduRow" id="ResultCv_Educations_' + i + '"><input name="ResultCv.Educations.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_Educations_' + i + '__Name" name="ResultCv.Educations[' + i + '].Name" onfocus="changeText(this.id)" placeholder="Name Education" type="text" value=""> <input required class="form-control" id="ResultCv_Educations_' + i + '__LevelOfEducation" name="ResultCv.Educations[' + i + '].LevelOfEducation" onfocus="changeText(this.id)" placeholder="Level of Education" type="text" value=""> <input required class="form-control" id="ResultCv_Educations_' + i + '__OrganizationName" name="ResultCv.Educations[' + i + '].OrganizationName" onfocus="changeText(this.id)" placeholder="Name Institute" type="text" value=""> <input required class="form-control" id="ResultCv_Educations_' + i + '__LocationOrganization" name="ResultCv.Educations[' + i + '].LocationOrganization" onfocus="changeText(this.id)" placeholder="Location Institute" type="text" value=""><input required class="form-control"  type="Date" required id="ResultCv_Educations_' + i + '__BeginDate" name="ResultCv.Educations[' + i + '].BeginDate" onfocus="changeText(this.id)" type="text" placeholder="Begin Date"><input required class="form-control"  type="Date" required id="ResultCv_Educations_' + i + '__EndDate" name="ResultCv.Educations[' + i + '].EndDate" onfocus="changeText(this.id)" type="text" placeholder="End Date"> <label for="ResultCv_Educations_' + i + '__Diploma">Diploma</label> <input id="ResultCv_Educations_' + i + '__Diploma" name="ResultCv.Educations[' + i + '].Diploma" type="checkbox" value="true"><input name="ResultCv.Educations[' + i + '].Diploma" type="hidden" value="false"><button type="button" onclick="removeElement(ResultCv_Educations_' + i + ')">Remove Education</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function addWork() {
                                        @{
                                            Model.ResultCv.WorkExperiences.Add(new ResumeStripper.Models.Experiences.WorkExperience());
                                        }
                                        var i = document.getElementById("WorkFields").getElementsByClassName("workRow").length;
                                        var fields = $('#WorkFields');
                                        var template = '<div class="workRow" id="ResultCv_WorkExperiences_' + i + '"><input name="ResultCv.WorkExperiences.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_WorkExperiences_' + i + '__JobTitle" name="ResultCv.WorkExperiences[' + i + '].JobTitle" onfocus="changeText(this.id)" placeholder="Job Title" type="text" value=""> <input required class="form-control" id="ResultCv_WorkExperiences_' + i + '__OrganizationName" name="ResultCv.WorkExperiences[' + i + '].OrganizationName" onfocus="changeText(this.id)" placeholder="Company Name" type="text" value=""> <input required class="form-control" id="ResultCv_WorkExperiences_' + i + '__LocationOrganization" name="ResultCv.WorkExperiences[' + i + '].LocationOrganization" onfocus="changeText(this.id)" placeholder="Company Location" type="text" value=""> <textarea class="form-control" cols="20" id="ResultCv_WorkExperiences_' + i + '__TaskDescription" name="ResultCv.WorkExperiences[' + i + '].TaskDescription" onfocus="changeText(this.id)" placeholder="Job Description" rows="2"></textarea> <input required value="" class="form-control" required  type="Date" id="ResultCv_WorkExperiences_' + i + '__BeginDate" name="ResultCv.WorkExperiences[' + i + '].BeginDate" onfocus="changeText(this.id)" placeholder="Begin Date" type="text"> <input required value="" class="form-control" required  type="Date" id="ResultCv_WorkExperiences_' + i + '__EndDate" name="ResultCv.WorkExperiences[' + i + '].EndDate" onfocus="changeText(this.id)" placeholder="End Date" type="text"><button onclick="removeElement(ResultCv_WorkExperiences_' + i + ')">Remove Work Experience</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function addCourse() {
                                        @{
                                            Model.ResultCv.Courses.Add(new ResumeStripper.Models.Experiences.CourseExperience());
                                        }
                                        var i = document.getElementById("CourseFields").getElementsByClassName("courseRow").length;
                                        var fields = $('#CourseFields');
                                        var template = '<div class="courseRow" id="ResultCv_Courses_' + i + '"><input name="ResultCv.Courses.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_Courses_' + i + '__Name" name="ResultCv.Courses[' + i + '].Name" onfocus="changeText(this.id)" placeholder="Course Name" type="text" value=""> <input required class="form-control" id="ResultCv_Courses_' + i + '__OrganizationName" name="ResultCv.Courses[' + i + '].OrganizationName" onfocus="changeText(this.id)" placeholder="Institute Name" type="text" value=""> <input required class="form-control" id="ResultCv_Courses_' + i + '__LocationOrganization" name="ResultCv.Courses[' + i + '].LocationOrganization" onfocus="changeText(this.id)" placeholder="Institute Location" type="text" value=""> <input required value="" class="form-control" required type="Date" id="ResultCv_Courses_' + i + '__Year" name="ResultCv.Courses[' + i + '].Year" onfocus="changeText(this.id)" placeholder="Year" type="text"><label for="ResultCv_Courses_' + i + '__Certificate">Certificate</label> <input data-val="true" data-val-required="Het veld Certificate is vereist." id="ResultCv_Courses_' + i + '__Certificate" name="ResultCv.Courses[' + i + '].Certificate" type="checkbox" value="true"><input name="ResultCv.Courses[' + i + '].Certificate" type="hidden" value="false"><button onclick="removeElement(ResultCv_Courses_' + i + ')">Remove Course</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function addSideline() {
                                        @{
                                            Model.ResultCv.SideLines.Add(new ResumeStripper.Models.Experiences.SidelineExperience());
                                        }
                                        var i = document.getElementById("SidelineFields").getElementsByClassName("sidelineRow").length;
                                        var fields = $('#SidelineFields');
                                        var template = '<div class="sidelineRow" id="ResultCv_Sidelines_' + i + '"><input name="ResultCv.Sidelines.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_SideLines_' + i + '__JobTitle" name="ResultCv.SideLines[' + i + '].JobTitle" onfocus="changeText(this.id)" placeholder="Job Title" type="text" value=""> <input required class="form-control" id="ResultCv_SideLines_' + i + '__OrganizationName" name="ResultCv.SideLines[' + i + '].OrganizationName" onfocus="changeText(this.id)" placeholder="Organization Name" type="text" value=""> <input required class="form-control" id="ResultCv_SideLines_' + i + '__LocationOrganization" name="ResultCv.SideLines[' + i + '].LocationOrganization" onfocus="changeText(this.id)" placeholder="Organization Location" type="text" value=""> <textarea class="form-control" cols="20" id="ResultCv_SideLines_' + i + '__TaskDescription" name="ResultCv.SideLines[' + i + '].TaskDescription" onfocus="changeText(this.id)" placeholder="Task Description" rows="2"></textarea> <input required value="" class="form-control" required  type="Date" id="ResultCv_SideLines_' + i + '__BeginDate" name="ResultCv.SideLines[' + i + '].BeginDate" onfocus="changeText(this.id)" placeholder="Begin Date" type="text"> <input required value="" class="form-control" required  type="Date" id="ResultCv_SideLines_' + i + '__EndDate" name="ResultCv.SideLines[' + i + '].EndDate" onfocus="changeText(this.id)" placeholder="End Date" type="text"><button onclick="removeElement(ResultCv_Sidelines_' + i + ')">Remove Sideline</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function addLanguage() {
                                        @{
                                            Model.ResultCv.Languages.Add(new ResumeStripper.Models.Language());
                                        }
                                        var i = document.getElementById("LanguageFields").getElementsByClassName("languageRow").length;
                                        var fields = $('#LanguageFields');
                                        var template = '<div class="languageRow" id="ResultCv_Languages_' + i + '"><input name="ResultCv.Languages.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_Languages_' + i + '__Name" name="ResultCv.Languages[' + i + '].Name" onfocus="changeText(this.id)" placeholder="Name" type="text" value=""> <label for="ResultCv_Languages_' + i + '__Level">Level</label> <select class="form-control" data-val="true" data-val-required="Het veld Level is vereist." id="ResultCv_Languages_' + i + '__Level" name="ResultCv.Languages[' + i + '].Level"><option selected="selected" value="' + i + '">Basic</option><option value="1">Good</option><option value="2">Very Good</option><option value="3">Native</option></select> <label for="ResultCv_Languages_' + i + '__LevelOfListening">LevelOfListening</label> <select class="form-control" data-val="true" data-val-required="Het veld LevelOfListening is vereist." id="ResultCv_Languages_' + i + '__LevelOfListening" name="ResultCv.Languages[' + i + '].LevelOfListening"><option selected="selected" value="' + i + '">Basic</option><option value="1">Good</option><option value="2">Very Good</option><option value="3">Native</option></select> <label for="ResultCv_Languages_' + i + '__LevelOfSpeaking">LevelOfSpeaking</label> <select class="form-control" data-val="true" data-val-required="Het veld LevelOfSpeaking is vereist." id="ResultCv_Languages_' + i + '__LevelOfSpeaking" name="ResultCv.Languages[' + i + '].LevelOfSpeaking"><option selected="selected" value="' + i + '">Basic</option><option value="1">Good</option><option value="2">Very Good</option><option value="3">Native</option></select> <label for="ResultCv_Languages_' + i + '__LevelOfWriting">LevelOfWriting</label> <select class="form-control" data-val="true" data-val-required="Het veld LevelOfWriting is vereist." id="ResultCv_Languages_' + i + '__LevelOfWriting" name="ResultCv.Languages[' + i + '].LevelOfWriting"><option selected="selected" value="' + i + '">Basic</option><option value="1">Good</option><option value="2">Very Good</option><option value="3">Native</option></select><button onclick="removeElement(ResultCv_Languages_' + i + ')">Remove Language</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function addSkill() {
                                        @{
                                            Model.ResultCv.Skills.Add(new ResumeStripper.Models.Skill());
                                        }
                                        var i = document.getElementById("SkillFields").getElementsByClassName("skillRow").length;
                                        var fields = $('#SkillFields');
                                        var template = '<div class="skillRow" id="ResultCv_Skills_' + i + '"><input name="ResultCv.Skills.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_Skills_' + i + '__Name" name="ResultCv.Skills[' + i + '].Name" onfocus="changeText(this.id)" placeholder="Skill Name" type="text" value=""><button onclick="removeElement(ResultCv_Skills_' + i + ')">Remove Skill</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function addCompetence() {
                                        @{
                                            Model.ResultCv.Competences.Add(new ResumeStripper.Models.Competence());
                                        }
                                        var i = document.getElementById("CompetenceFields").getElementsByClassName("competenceRow").length;
                                        var fields = $('#CompetenceFields');
                                        var template = '<div class="competenceRow" id="ResultCv_Competences_' + i + '"><input name="ResultCv.Competences.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_Competences_' + i + '__Name" name="ResultCv.Competences[' + i + '].Name" onfocus="changeText(this.id)" placeholder="Competence Name" type="text" value=""><button onclick="removeElement(ResultCv_Competences_' + i + ')">Remove Competence</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function addHobby() {
                                        @{
                                            Model.ResultCv.Hobbies.Add(new ResumeStripper.Models.Hobby());
                                        }
                                        var i = document.getElementById("HobbyFields").getElementsByClassName("hobbyRow").length;
                                        var fields = $('#HobbyFields');
                                        var template = '<div class="hobbyRow" id="ResultCv_Hobbies_' + i + '"><input name="ResultCv.Hobbies.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_Hobbies_' + i + '__Name" name="ResultCv.Hobbies[' + i + '].Name" onfocus="changeText(this.id)" placeholder="Hobby Name" type="text" value=""><button onclick="removeElement(ResultCv_Hobbies_' + i + ')">Remove Hobby</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                    function addReference() {
                                        @{
                                            Model.ResultCv.References.Add(new ResumeStripper.Models.Reference());
                                        }
                                        var i = document.getElementById("ReferenceFields").getElementsByClassName("referenceRow").length;
                                        var fields = $('#ReferenceFields');
                                        var template = '<div class="referenceRow" id="ResultCv_References_' + i + '"><input name="ResultCv.References.Index" type="hidden" value="' + i + '"/><input required class="form-control" id="ResultCv_References_' + i + '__Name" name="ResultCv.References[' + i + '].Name" onfocus="changeText(this.id)" placeholder="Name" type="text" value=""> <input required class="form-control" id="ResultCv_References_' + i + '__JobTitle" name="ResultCv.References[' + i + '].JobTitle" onfocus="changeText(this.id)" placeholder="Job Title" type="text" value=""> <input required class="form-control" id="ResultCv_References_' + i + '__CompanyName" name="ResultCv.References[' + i + '].CompanyName" onfocus="changeText(this.id)" placeholder="Company Name" type="text" value=""> <input required class="form-control" id="ResultCv_References_' + i + '__Email" name="ResultCv.References[' + i + '].Email" onfocus="changeText(this.id)" placeholder="Emailaddress" type="email" value=""> <input required class="form-control" id="ResultCv_References_' + i + '__PhoneNumber" name="ResultCv.References[' + i + '].PhoneNumber" onfocus="changeText(this.id)" placeholder="Phonenumber" type="text" value=""><button onclick="removeElement(ResultCv_References_' + i + ')">Remove Reference</button></div>';
                                        $(template).appendTo(fields);
                                    }
                                </script>
                                <br />
                                <div id="EducationFields">
                                </div>
                                <input type="button" id="addEducationBtn" onclick="addEducation()" value="Add Education" />
                                <br />
                                <h3>Work Experiences</h3>
                                <hr />
                                <div id="WorkFields">
                                </div>
                                <input type="button" id="addWorkBtn" onclick="addWork()" value="Add Work Experience" />
                                <br />
                                <h3>Courses</h3>
                                <hr />
                                <div id="CourseFields">
                                </div>
                                <input type="button" id="addCourseBtn" onclick="addCourse()" value="Add Course" />
                                <br />
                                <h3>Sidelines</h3>
                                <hr />
                                <div id="SidelineFields">
                                </div>
                                <input type="button" id="addSidelineBtn" onclick="addSideline()" value="Add Sideline" />
                                <br />
                                <h3>Languages</h3>
                                <hr />
                                <div id="LanguageFields">
                                </div>
                                <input type="button" id="addLanguageBtn" onclick="addLanguage()" value="Add Language" />
                                <br />
                                <h3>Skills</h3>
                                <hr />
                                <div id="SkillFields">
                                </div>
                                <input type="button" id="addSkillBtn" onclick="addSkill()" value="Add Skill" />
                                <br />
                                <h3>Competences</h3>
                                <hr />
                                <div id="CompetenceFields">
                                </div>
                                <input type="button" id="addCompetenceBtn" onclick="addCompetence()" value="Add Competence" />
                                <br />
                                <h3>Hobby's</h3>
                                <hr />
                                <div id="HobbyFields">
                                </div>
                                <input type="button" id="addHobbyBtn" onclick="addHobby()" value="Add Hobby" />
                                <br />
                                <h3>References</h3>
                                <hr />
                                <div id="ReferenceFields">
                                </div>
                                <input type="button" id="addReferenceBtn" onclick="addReference()" value="Add Reference" />
                            }
                        </div>
                    </div>
                </div>
            </div>
            <footer class="footer">
                <div class="container-fluid">
                    <nav class="pull-left">
                        <ul>
                            <li>
                                <a href="#">
                                    Dashboard
                                </a>
                            </li>
                            <li>
                                <a href="#">
                                    My account
                                </a>
                            </li>
                            <li>
                                <a href="#">
                                    EHV Talent
                                </a>
                            </li>
                            <li>
                                <a href="#">
                                    EHV Projects
                                </a>
                            </li>
                        </ul>
                    </nav>
                    <p class="copyright pull-right">
                        &copy;
                        <script>document.write(new Date().getFullYear())</script>
                        <a href="http://www.ehv.nl">EHV Talent</a>
                    </p>
                </div>
            </footer>
        </div>
    </div>
</div>